StackExchange.Redis.IDatabase.SortedSetRangeByRankAndStore(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, long start = 0, long stop = -1, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> StackExchange.Redis.RedisValue
StackExchange.Redis.IDatabase.SortedSetRangeByScoreAndStore(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, double start = -Infinity, double stop = Infinity, StackExchange.Redis.Exclude exclude = StackExchange.Redis.Exclude.None, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, long skip = 0, long take = 0, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> StackExchange.Redis.RedisValue
StackExchange.Redis.IDatabase.SortedSetRangeByValueAndStore(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, StackExchange.Redis.RedisValue min, StackExchange.Redis.RedisValue max, StackExchange.Redis.Exclude exclude, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, long skip = 0, long take = 0, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> StackExchange.Redis.RedisValue
StackExchange.Redis.IDatabaseAsync.SortedSetRangeByRankAndStoreAsync(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, long start = 0, long stop = -1, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> System.Threading.Tasks.Task<StackExchange.Redis.RedisValue>
StackExchange.Redis.IDatabaseAsync.SortedSetRangeByScoreAndStoreAsync(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, double start = -Infinity, double stop = Infinity, StackExchange.Redis.Exclude exclude = StackExchange.Redis.Exclude.None, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, long skip = 0, long take = 0, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> System.Threading.Tasks.Task<StackExchange.Redis.RedisValue>
StackExchange.Redis.IDatabaseAsync.SortedSetRangeByValueAndStoreAsync(StackExchange.Redis.RedisKey destinationKey, StackExchange.Redis.RedisKey sourceKey, StackExchange.Redis.RedisValue min, StackExchange.Redis.RedisValue max, StackExchange.Redis.Exclude exclude, StackExchange.Redis.Order order = StackExchange.Redis.Order.Ascending, long skip = 0, long take = 0, StackExchange.Redis.CommandFlags flags = StackExchange.Redis.CommandFlags.None) -> System.Threading.Tasks.Task<StackExchange.Redis.RedisValue>